# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env.local
.env.development.local
.env.test.local
.env.production.local

# vercel
.vercel

test-report.xml

# Logs
logs
*.log*

# Runtime data
pids
*.pid
*.seed

# mergetool data
*.orig

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git
node_modules

# Dist folder
dist

# IDEA/Webstorm project files
.idea
*.iml

# VSCode metadata
.vscode

# Mac files
.DS_Store

# Sonarqube metadata
.scannerwork

# eslint cache
.eslintcache

# The best pattern people should follow is ignoring the editors' files in their
# global .gitignore configuration file.
# However, in order to prevent issues. We also ignore editors' files here.
.idea
.vscode

# Screenshors generated for Argos-CI
*.log
.DS_STORE
/.next
/.nyc_output
/coverage
/packages/material-ui-codemod/lib
/test/regressions/screenshots
/tmp
.next
build
node_modules
